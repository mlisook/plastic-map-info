define(["./my-app.js"],function(_myApp){"use strict";function _templateObject_5d7d94f076cb11e8861a3d98ee478eb9(){var data=babelHelpers.taggedTemplateLiteral(["\n        <style include=\"shared-styles iron-flex iron-flex-alignment\">\n          :host {\n            display: block;\n  \n            padding: 10px;\n          }\n          google-map {\n          width: 500px;\n          height: 400px;\n        }\n        plastic-map-info {\n        --plastic-map-info-mixin: {\n          background-color: transparent;\n          border-bottom: solid red;\n          color: red;\n          padding: 10px 18px 5px 5px;\n          border-radius: 2px;\n          max-width: 75%;\n        }\n        ;\n      }\n\n      paper-button.redwhite {\n        background-color: red;\n        color: white;\n        font-family: 'Roboto', 'Noto', sans-serif;\n        cursor: pointer;\n      }\n        </style>\n      \n        <google-map id=\"v4map\" on-google-map-ready=\"_mapReady\" fit-to-markers api-key=\"AIzaSyBmsetVvB1KlWoSbEXYQg1leRZO1PVPm_Q\">\n        <template is=\"dom-repeat\" items=\"[[towers]]\" as=\"t\">\n          <google-map-marker slot=\"markers\" click-events latitude=\"[[t.lat]]\" longitude=\"[[t.lng]]\" on-google-map-marker-click=\"_markerClick\" >\n          </google-map-marker>\n        </template>\n        <plastic-map-info id=\"myinfocard\" fade-in>\n        <div class=\"layout horizontal\">\n          <div>\n            <img src$=\"[[tower.imgUrl]]\" style=\"height: 100px; width: 60px;\" />\n          </div>\n          <div class=\"layout vertical\" style=\"padding-left: 5px;\">\n            <div style=\"font-weight: bold; font-family: 'Roboto', 'Noto', sans-serif; font-size: 11pt; color: maroon;\">\n              [[tower.tower]]\n            </div>\n            <div style=\"font-weight: bold; font-family: 'Roboto', 'Noto', sans-serif; font-size: 9pt;\">\n              [[tower.description]]\n            </div>\n            <div style=\"margin-top: 9px;\">\n              <paper-button class=\"redwhite\" raised on-tap=\"nextTower\">Next Tower</paper-button>\n            </div>\n          </div>\n        </div>\n        <div slot=\"info-beak\">\n          <svg width=\"120\" height=\"80\">\n            <defs>\n              <path id=\"beaktext\" d=\"M 17,20 L 62,80\" />\n            </defs>\n            <line x1=\"7.5\" y1=\"10\" x2=\"60\" y2=\"80\" style=\"stroke:rgb(255,0,0);stroke-width:2\" />\n            <text style=\"font-size: 9pt; stroke: red;\">\n              <textPath xlink:href=\"#beaktext\">\n                [[tower.tower]]\n              </textPath>\n            </text>\n          </svg>\n        </div>\n        </plastic-map-info>\n      </google-map>\n      <div id=\"sources\"></div>\n      "]);_templateObject_5d7d94f076cb11e8861a3d98ee478eb9=function(){return data};return data}var MyView4=function(_GestureEventListener){babelHelpers.inherits(MyView4,_GestureEventListener);function MyView4(){babelHelpers.classCallCheck(this,MyView4);return babelHelpers.possibleConstructorReturn(this,(MyView4.__proto__||Object.getPrototypeOf(MyView4)).apply(this,arguments))}babelHelpers.createClass(MyView4,[{key:"connectedCallback",value:function connectedCallback(){var _this=this;babelHelpers.get(MyView4.prototype.__proto__||Object.getPrototypeOf(MyView4.prototype),"connectedCallback",this).call(this);this.towers=[{tower:"Tokyo Skytree",idx:0,description:"Tokyo Skytree is a broadcasting, restaurant, and observation tower in Sumida, Tokyo, Japan. It is of 634.0 metres (2,080 ft) tall,making it the tallest tower in the world,",lat:35.71,lng:139.81046,imgUrl:"https://res.cloudinary.com/davo7aym4/image/upload/w_100/v1529359948/Tokyo_Sky_Tree_u1vj7e.jpg"},{tower:"Canton Tower",idx:1,description:"Canton Tower is a 595.7-metre (1,954 ft) tall multi-purpose observation tower in the Haizhu District of Guangzhou, Guangdong, China. It is the second tallest tower in the world.",lat:23.106397,lng:113.32453,imgUrl:"https://res.cloudinary.com/davo7aym4/image/upload/w_100/v1529359948/Canton_tower_gol26v.jpg"},{tower:"CN Tower",idx:2,description:"The CN Tower is a 553.33 m-high (1,815.4 ft) concrete communications and observation tower in downtown Toronto, Ontario, Canada",lat:43.64255,lng:-79.387,imgUrl:"https://res.cloudinary.com/davo7aym4/image/upload/w_100/v1529359949/CN_Tower_baqlly.jpg"},{tower:"Space Needle",idx:3,description:"The Space Needle is an observation tower in Seattle, Washington, a landmark of the Pacific Northwest, and an icon of Seattle. It is 605 ft (184 m) high. ",lat:47.62405,lng:-122.349277,imgUrl:"https://res.cloudinary.com/davo7aym4/image/upload/w_100/v1529359948/Space_Needle_jjm80y.jpg"},{tower:"Eiffel Tower",idx:4,description:"The Eiffel Tower is a wrought iron lattice tower on the Champ de Mars in Paris, France.",lat:48.858349,lng:2.294358,imgUrl:"https://res.cloudinary.com/davo7aym4/image/upload/w_100/v1529359948/Tour_Eiffel_ydkdbw.jpg"}];setTimeout(function(){_this._showSource()},1e3)}},{key:"_mapReady",value:function _mapReady(){}},{key:"_markerClick",value:function _markerClick(e){this.tower=e.model.get("t");this.$.myinfocard.showInfoWindow(e.target.marker)}},{key:"nextTower",value:function nextTower(){var nextTowerIdx=4<=this.tower.idx?0:this.tower.idx+1,nextMarker=this.$.v4map.markers[nextTowerIdx].marker;this.$.myinfocard.close();nextMarker.map.panTo(nextMarker.getPosition());nextMarker.map.setZoom(4);this.tower=this.towers[nextTowerIdx];this.$.myinfocard.showInfoWindow(nextMarker)}},{key:"_showSource",value:function _showSource(){var mapMarkup=hljs.highlight("xml","\n        <google-map id=\"v4map\" on-google-map-ready=\"_mapReady\" fit-to-markers api-key=\"[[apiKey]]\">\n        <template is=\"dom-repeat\" items=\"[[towers]]\" as=\"t\">\n          <google-map-marker slot=\"markers\" click-events latitude=\"[[t.lat]]\" longitude=\"[[t.lng]]\" on-google-map-marker-click=\"_markerClick\" >\n          </google-map-marker>\n        </template>\n        <plastic-map-info id=\"myinfocard\" fade-in>\n        <div class=\"layout horizontal\">\n          <div>\n            <img src$=\"[[tower.imgUrl]]\" style=\"height: 100px; width: 60px;\" />\n          </div>\n          <div class=\"layout vertical\" style=\"padding-left: 5px;\">\n            <div style=\"font-weight: bold; font-family: 'Roboto', 'Noto', sans-serif; font-size: 11pt; color: maroon;\">\n              [[tower.tower]]\n            </div>\n            <div style=\"font-weight: bold; font-family: 'Roboto', 'Noto', sans-serif; font-size: 9pt;\">\n              [[tower.description]]\n            </div>\n            <div style=\"margin-top: 9px;\">\n              <paper-button class=\"redwhite\" raised on-tap=\"nextTower\">Next Tower</paper-button>\n            </div>\n          </div>\n        </div>\n        <div slot=\"info-beak\">\n          <svg width=\"120\" height=\"80\">\n            <defs>\n              <path id=\"beaktext\" d=\"M 17,20 L 62,80\" />\n            </defs>\n            <line x1=\"7.5\" y1=\"10\" x2=\"60\" y2=\"80\" style=\"stroke:rgb(255,0,0);stroke-width:2\" />\n            <text style=\"font-size: 9pt; stroke: red;\">\n              <textPath xlink:href=\"#beaktext\">\n                [[tower.tower]]\n              </textPath>\n            </text>\n          </svg>\n        </div>\n        </plastic-map-info>\n      </google-map>\n      "),cssMarkup=hljs.highlight("css","\n        plastic-map-info {\n            --plastic-map-info-mixin: {\n              background-color: transparent;\n              border-bottom: solid red;\n              color: red;\n              padding: 10px 18px 5px 5px;\n              border-radius: 2px;\n              max-width: 75%;\n            }\n            ;\n          }\n    \n          paper-button.redwhite {\n            background-color: red;\n            color: white;\n            font-family: 'Roboto', 'Noto', sans-serif;\n            cursor: pointer;\n          }\n      ");this.$.sources.innerHTML="\n      <h2>Radical Styling and a Custom Beek</h2>\n      <p>In this example we use style mixins to modify the appearance of the infowindow\n      and add a custom SVG beek (the pointer from the window to the marker).</p>\n      <h3>CSS</h3>\n      <pre><code class=\"css\">".concat(cssMarkup.value,"</code></pre>\n      <h3>Markup</h3>\n      <pre><code class=\"html\">").concat(mapMarkup.value,"</code></pre>");var jsCode=hljs.highlight("javascript","\n        nextTower() {\n            let nextTowerIdx = this.tower.idx >= 4 ? 0 : this.tower.idx + 1;\n            let nextMarker = this.$.v4map.markers[nextTowerIdx].marker;\n            this.$.myinfocard.close();\n            nextMarker.map.panTo(nextMarker.getPosition());\n            nextMarker.map.setZoom(4);\n            this.tower = this.towers[nextTowerIdx];\n            this.$.myinfocard.showInfoWindow(nextMarker);\n        }\n      \n        _markerClick(e) {\n          this.tower = e.model.get('t');\n            this.$.myinfocard.showInfoWindow(e.target.marker);\n        }\n      ");this.$.sources.innerHTML+="<h3>Javascript</h3>\n      <p>This illustrates handling the on-tap for the next tower button and the marker click event to show the infowindow.</p>\n      <pre><code class=\"javascript\">".concat(jsCode.value,"</code></pre>")}}],[{key:"template",get:function get(){return(0,_myApp.html)(_templateObject_5d7d94f076cb11e8861a3d98ee478eb9())}},{key:"properties",get:function get(){return{towers:{type:Array,notify:!0},tower:{type:Object,notify:!0}}}}]);return MyView4}((0,_myApp.GestureEventListeners)(_myApp.PolymerElement));window.customElements.define("my-view4",MyView4)});